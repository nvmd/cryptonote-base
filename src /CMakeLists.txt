add_definitions(-DSTATICLIB)

file(GLOB_RECURSE COMMON common/*)
file(GLOB_RECURSE CRYPTO crypto/*)
file(GLOB_RECURSE CRYPTONOTE_CORE cryptonote_core/* cryptonote_config.h)
file(GLOB_RECURSE CRYPTONOTE_PROTOCOL cryptonote_protocol/*)
file(GLOB_RECURSE DAEMON daemon/*)
file(GLOB_RECURSE P2P p2p/*)
file(GLOB_RECURSE RPC rpc/*)
file(GLOB_RECURSE SIMPLEWALLET simplewallet/*)
file(GLOB_RECURSE CONN_TOOL connectivity_tool/*)
file(GLOB_RECURSE WALLET wallet/*)
file(GLOB_RECURSE MINER miner/*)
file(GLOB_RECURSE NODE_RPC_PROXY node_rpc_proxy/*)
file(GLOB_RECURSE TRANSFERS transfers/*)
if(MSVC)
file(GLOB_RECURSE SYSTEM Platform/Windows/System/*)
elseif(APPLE)
file(GLOB_RECURSE SYSTEM Platform/OSX/System/*)
else()
file(GLOB_RECURSE SYSTEM Platform/Linux/System/*)
endif()
file(GLOB_RECURSE SERIALIZATION serialization/*)
file(GLOB_RECURSE LOGGER logger/*)
file(GLOB_RECURSE INPROCESS_NODE inprocess_node/*)
file(GLOB_RECURSE HTTP HTTP/*)


source_group(common FILES ${COMMON})
source_group(crypto FILES ${CRYPTO})
source_group(cryptonote_core FILES ${CRYPTONOTE_CORE})
source_group(cryptonote_protocol FILES ${CRYPTONOTE_PROTOCOL})
source_group(daemon FILES ${DAEMON})
source_group(p2p FILES ${P2P})
source_group(rpc FILES ${RPC})
source_group(System FILES ${SYSTEM} ${HTTP})
source_group(simplewallet FILES ${SIMPLEWALLET})
source_group(connectivity-tool FILES ${CONN_TOOL})
source_group(wallet FILES ${WALLET})
source_group(simpleminer FILES ${MINER})
source_group(node_rpc_proxy FILES ${NODE_RPC_PROXY})
source_group(transfers FILES ${TRANSFERS})
source_group(logger FILES ${LOGGER})
source_group(inprocess_node FILES ${INPROCESS_NODE})

add_library(common ${COMMON})
add_library(crypto ${CRYPTO})
add_library(serialization ${SERIALIZATION})
add_library(cryptonote_core ${CRYPTONOTE_CORE})
add_library(node_rpc_proxy ${NODE_RPC_PROXY})
add_library(inprocess_node ${INPROCESS_NODE})
add_executable(daemon ${DAEMON} ${P2P} ${CRYPTONOTE_PROTOCOL})
add_executable(connectivity_tool ${CONN_TOOL})
add_executable(simpleminer ${MINER})
target_link_libraries(daemon epee rpc cryptonote_core crypto common upnpc-static serialization ${Boost_LIBRARIES})
target_link_libraries(connectivity_tool epee rpc cryptonote_core crypto common serialization ${Boost_LIBRARIES})
target_link_libraries(simpleminer epee cryptonote_core crypto common serialization ${Boost_LIBRARIES})
add_library(rpc ${RPC})
add_library(System ${SYSTEM} ${HTTP} System/TcpStream.cpp System/TcpStream.h)
add_library(wallet ${WALLET})
add_executable(simplewallet ${SIMPLEWALLET} )
target_link_libraries(simplewallet epee wallet transfers rpc cryptonote_core crypto common upnpc-static node_rpc_proxy serialization ${Boost_LIBRARIES})
add_library(logger ${LOGGER})
add_library(transfers ${TRANSFERS})


add_dependencies(connectivity_tool version)
add_dependencies(daemon version)
add_dependencies(rpc version)
add_dependencies(simplewallet version)

set_property(TARGET common crypto cryptonote_core rpc System wallet node_rpc_proxy serialization logger transfers inprocess_node PROPERTY FOLDER "libs")
set_property(TARGET daemon simplewallet connectivity_tool simpleminer PROPERTY FOLDER "prog")
#TODO Specify the name of daemon for your currency
set_property(TARGET daemon PROPERTY OUTPUT_NAME "grantcoin
